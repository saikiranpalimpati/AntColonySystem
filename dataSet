#include<iostream>
#include<vector>
using namespace std;
struct vertex
{
	int x;
	int y;
	vertex(int xcor, int ycor)
	{
		x = xcor;
		y = ycor;
	}
};
void main()
{
	int n = 4;
	int total_angle = 360;
	int angle_inside = total_angle / n;
	
	vector<vertex> v;
	//v.resize(n);
	
	for (int i = 0; i < n; i++)
	{
		v.push_back(vertex(i, i));
	}
	int angle_temp = 0;
	for (int i = 0; i < n-1; i++)
	{
		int xcor = 0;
		int ycor = 0;
		if (angle_temp <= 90)
		{
		
			xcor = (n/2)*sin(angle_temp);
			ycor = (n / 2)*cos(angle_temp);
			v[i] = vertex(xcor, ycor);;
		}
		else if(angle_temp > 90 && angle_temp<=180)
		{
			xcor = -((n / 2)*sin(angle_temp));
			ycor = (n / 2)*cos(angle_temp);
			v[i] = vertex(xcor, ycor);;
		}
		else if (angle_temp > 180 && angle_temp <= 270)
		{
			xcor = -((n / 2)*sin(angle_temp));
			ycor = -((n / 2)*cos(angle_temp));
			v[i] = vertex(xcor, ycor);;
		}
		else if (angle_temp > 270 && angle_temp <= 360)
		{
			xcor = (n / 2)*sin(angle_temp);
			ycor = -((n / 2)*cos(angle_temp));
			v[i] = vertex(xcor, ycor);;
		}

		angle_temp = angle_temp + angle_inside;

		//v[i] = vertex(2, 2);
	}
	for (int i = 0; i < n; i++)
	{
		cout<<v[i].x<<v[i].y<<endl;
	}
	system("pause");
}
